#BlueJ class context
comment0.target=Lieferant
comment0.text=\n\ @author\ Gruppe\ 29\n\ @version\ 2.0\ (13.\ November\ 2022)\n\n\ Die\ Klasse\ Lieferant\ erm\u00F6glicht\ es\ Bestellungen\ an\ den\ Lieferanten\ aufzugeben.\n
comment1.params=holzEinheiten\ schrauben\ farbEinheiten\ kartonEinheiten\ kissen
comment1.target=boolean\ wareBestellen(int,\ int,\ int,\ int,\ int)
comment1.text=\ Feedback\ Cha\n\ falls\ wir\ bei\ dem\ Lager\ die\ Einheiten\ abge\u00E4ndert\ haben\ zu\ -->\ zuBestellendeHolzeinheiten\ etc,\ dann\ k\u00F6nnen\ wir\ diese\ nun\ abrufen\ (und\ nur\ diese...)\n\ Vorschlag\ eine\ run\ Methode\ zu\ implementieren,\ damit\ das\ automatisch\ ausgel\u00F6st\ wird\n\n\ public\ boolean\ wareBestellen\ (int\ zuBestellendeHolzeinheiten,\ int\ zuBestellendeSchrauben,\ int\ zuBestellendeFarbeinheiten,\n\ int\ zuBestellendeKartoneinheiten,int\ zuBestellendeKissen)\ {\n\ \ \ \ start();\ \ \ \n\ \ \ \ return\ true;\n\ }\n\ \n\ Flo\:\ Guten\ Input.\ Frage\:\ Wollen\ wir\ das\ automatisch\ ausl\u00F6sen?\ Weil\:\ Grosse\ Bestellungen\ sind\ g\u00FCnstiger\ als\ viele\ kleine.\n\ Timo\:\ Ich\ denke\ das\ macht\ Sinn,\ idealerweise\ wird\ 1x\ am\ Tag\ eine\ Grossbestellung\ ausgegeben,\ sofern\ das\ Lager\ sich\ leert?\n\ \ \ \ \ \ dies\ k\u00F6nnten\ wir\ aber\ erst\ mir\ einer\ Zeitsimulation\ (Aufgabe\ 3)\ implementieren.\n
numComments=2
